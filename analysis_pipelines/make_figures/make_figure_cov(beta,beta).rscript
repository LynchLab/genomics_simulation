PYPATH<-"../python_utilities/"
DATAFILE<-"../../analysis_files/mapgd_relatedness.out"
GCTAFILE<-"../../analysis_files/gcta.grm.gz"
PLINKFILE<-"../../analysis_files/plink.genome"

KAPPAFILE<-"../../analysis_files/const.txt"

source("figures.conf")

t<-head(read.csv("../../analysis_files/cov.txt", sep="	", skip=1), -1) 
const<-read.csv(KAPPAFILE) 

a<-as.matrix(t[grepl("beta_[0123456789]*", names(t) ) ] )

d<-as.matrix(t[grepl("delta_[0123456789]*", names(t) ) ] )

alpha<-colSums(a)
delta<-colSums(d)

N<-length(alpha)
n<-200
DIM<-dim(a)[1]

#system(paste("cat ", DATAFILE, " | python-2.7.9 ", PYPATH, "make_A.py ", N, " > ../../analysis_files/A.csv", sep="" ) )
#system(paste("cat ", DATAFILE, " | python-2.7.9 ", PYPATH, "make_d.py ", N, " > ../../analysis_files/d.csv", sep="" ) )
#system(paste("cat ", DATAFILE, " | python-2.7.9 ", PYPATH, "make_D.py ", N, " > ../../analysis_files/D.csv", sep="" ) )
#system(paste("cat ", DATAFILE, " | python-2.7.9 ", PYPATH, "make_G.py ", N, " > ../../analysis_files/G.csv", sep="" ) )
#system(paste("cat ", DATAFILE, " | python-2.7.9 ", PYPATH, "make_F.py ", N, " > ../../analysis_files/F.csv", sep="" ) )
#system(paste("zcat ", GCTAFILE, " | python-2.7.9 ", PYPATH, "make_gactA.py ", N, " > ../../analysis_files/gctaA.csv", sep="" ) )
#system(paste("cat ", PLINKFILE, " | python-2.7.9 ", PYPATH, "make_plinkA.py ", N, " > ../../analysis_files/plinkA.csv", sep="" ) )

VA<-as.matrix(read.csv("../../analysis_files/A.csv", sep=",", header=FALSE) )
VD<-as.matrix(read.csv("../../analysis_files/D.csv", sep=",", header=FALSE) )
VG<-as.matrix(read.csv("../../analysis_files/G.csv", sep=",", header=FALSE) )
#VF<-as.matrix(read.csv("../../analysis_files/F.csv", sep=",", header=FALSE) )
#Vd<-as.matrix(read.csv("../../analysis_files/d.csv", sep=",", header=FALSE) )

gctaA<-as.matrix(read.csv("../../analysis_files/gctaA.csv", sep=",", header=FALSE) )
plinkA<-as.matrix(read.csv("../../analysis_files/plinkA.csv", sep=",", header=FALSE) )

true_a<-matrix(ncol=n, nrow=n)
true_d<-matrix(ncol=n, nrow=n)
true_g<-matrix(ncol=n, nrow=n)

for(x in 1:n) {
	for(y in x:n) {
		true_a[x,y]<-cov(a[,x], a[,y])
		true_a[y,x]<-true_a[x,y] 

		true_d[x,y]<-cov(d[,x], d[,y])
		true_d[y,x]<-true_d[x,y] 

		true_g[x,y]<-cov(d[,x], a[,y])+cov(a[,x], d[,y])
		true_g[y,x]<-cov(d[,y], a[,x])+cov(a[,y], d[,x])
	}
}

Vdelta<-VD[1:n,1:n]
VA<-VA[1:n, 1:n]
VG<-VG[1:n, 1:n]
gctaA<-gctaA[1:n, 1:n]
plinkA<-plinkA[1:n, 1:n]

true_a<-true_a/var(as.vector(a) )
true_d<-true_d/var(as.vector(d) )
true_g<-true_g/cov(as.vector(a), as.vector(d)  ) 

png("delta_vs_d.png")
par(mar=MAR2, family=FONT, font.lab=2)
plot(as.vector(Vdelta), as.vector(true_d), ylim=c(0,1.5), xlim=c(0,1.5), col=set_alpha(COLMAPGD, 0.05), pch=20, cex.lab=LABSIZE, cex.axis = AXISSIZE, xlab=expression(paste("S(", i, ",", j, ")") ),  ylab=expression(paste("cov[", delta[i], ",", delta[j], "]/var[", delta, "]") ) )
m<-rangemean(as.vector(true_d), as.vector(Vdelta), 100)
points(m[,1], m[,2], type='l', col=shade(COLMAPGD, 0.5), lwd=2)
abline(0,1,lwd=2, col="black", lty=2)
dev.off()

#png("d_vs_d.png")
#par(mar=MAR2, family=FONT, font.lab=2)
#plot(as.vector(Vd), as.vector(true_d), ylim=c(0,1.5), xlim=c(0,1.5), col=rgb(0,0,0,0.1), pch=20, cex.lab=LABSIZE, cex.axis = AXISSIZE, xlab=expression(paste("S(", i, ",", j, ")") ),  ylab=expression(paste("cov[", delta[i], ",", delta[j], "]/var[", delta, "]" ) ) )
#m<-rangemean(as.vector(true_d), as.vector(Vd), 100)
#points(m[,1], m[,2], type='l', col=COL1, lwd=2)
#abline(0,1, lwd=2, col="black", lty=2)
#dev.off()

#png("D_vs_d.png")
#par(mar=MAR2, family=FONT, font.lab=2)
#plot(as.vector(VD), as.vector(true_d), ylim=c(0,1.5), xlim=c(0,1.5), col=rgb(0,0,0,0.1), pch=20, cex.lab=LABSIZE, cex.axis = AXISSIZE, xlab=expression(paste("S(", i, ",", j, ")") ),  ylab=expression(paste("corr(", delta[i], ",", delta[j], ")") ) )
#m<-rangemean(as.vector(true_d), as.vector(VD), 100)
#points(m[,1], m[,2], type='l', col=COL1, lwd=2)
#abline(0,1, lwd=2, col="black", lty=2)
#dev.off()

png("a_vs_a.png")
par(mar=MAR2, family=FONT, font.lab=2)
plot(as.vector(VA), as.vector(true_a), type='n', ylim=c(0,1.5), xlim=c(0,1.5), cex.lab=LABSIZE, cex.axis = AXISSIZE, xlab=expression(paste("S(", i, ",", j, ")") ),  ylab=expression(paste("corr(", beta[i], ",", beta[j], ")") ) )
points(as.vector(gctaA*2), as.vector(true_a), pch=20, col=set_alpha(COLGCTA,0.05) )
points(as.vector(VA), as.vector(true_a), pch=20, col=set_alpha(COLMAPGD,0.05) )
m<-rangemean(as.vector(true_a), as.vector(VA), 100)
#contour(as.vector(VA), as.vector(true_a), drawlabels=FALSE, nlevels=10, col=shade(COLGCTA, 0.4), add=TRUE)
points(m[,1], m[,2], type='l', col=shade(COLMAPGD, 0.5), lwd=2)
m<-rangemean(as.vector(true_a), as.vector(gctaA*2), 100)
points(m[,1], m[,2], type='l', col=shade(COLGCTA, 0.5), lwd=2)
#m<-rangemean(as.vector(true_a), as.vector(plinkA), 100)
#points(m[,1], m[,2], type='l', col=shade(COLPLINK, 0.5), lwd=2)
abline(0,1, lwd=2, col="black", lty=2)
dev.off()

png("g_vs_g.png")
par(mar=MAR2, family=FONT, font.lab=2)
plot(as.vector(VG), as.vector(true_g), xlim=c(0,5), ylim=c(0,5), col=set_alpha(COLMAPGD,0.05), pch=20, cex.lab=LABSIZE, cex.axis = AXISSIZE, xlab=expression(paste("S(", i, ",", j, ")") ),  ylab=expression(paste("corr(", beta[i], ",", delta[j], ")") ) )
m<-rangemean(as.vector(true_g), as.vector(VG), 100)
points(m[,1], m[,2], type='l', col=shade(COLMAPGD, 0.5), lwd=2)
abline(0,1, lwd=2, col="black", lty=2)
dev.off()

library(regress)

z<-alpha[1:n]+delta[1:n]
r<-regress(z~1, ~VA+VG+Vdelta)

sA<-r$sigma[1]
sD<-r$sigma[2]
sAD<-r$sigma[3]

V<-sA*VA+sD*Vdelta+sAD*VG
z_hat<-c()

for (x in 1:n)
{
	z_hat<-c(z_hat, z[-x] %*% solve(V)[x,-x] )
#	z_beta<-c(z_hat, V %*% z )
#	z_delta<-c(z_hat, V %*% z )
}

